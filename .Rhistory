<<<<<<< HEAD
knitr::opts_chunk$set(echo = TRUE, warning = F,message = F,comment = NA)
<<<<<<< HEAD
=======
install.packages("googlesheets4")
library(googlesheets4)
library(googlesheets4)
gs4_auth()
library(googlesheets4)
gs4_auth()
sheet_url <- "https://docs.google.com/spreadsheets/d/1aAwaL0fyrCGGU3QEjPA11_tnwMxmebkRY0pjNFKTF_I/edit#gid=1588788399"
gs <- gs4_get(sheet_url)
data <- gs4read_sheet(gs)
library(googlesheets4)
gs4_auth()
# sheet_url <- "https://docs.google.com/spreadsheets/d/1aAwaL0fyrCGGU3QEjPA11_tnwMxmebkRY0pjNFKTF_I/edit#gid=1588788399"
# gs <- gs4_get(sheet_url)
# data <- gs4read_sheet(gs)
sheet_name <- "population distribution"
gs <- gs4_find(sheet_name)
library(googlesheets4)
gs4_auth()
# sheet_url <- "https://docs.google.com/spreadsheets/d/1aAwaL0fyrCGGU3QEjPA11_tnwMxmebkRY0pjNFKTF_I/edit#gid=1588788399"
# gs <- gs4_get(sheet_url)
# data <- gs4read_sheet(gs)
sheet_name <- "population distribution"
gs <- gs4_find(sheet_name)
data <- gs4read_sheet(gs)
sheet_name <- "population distribution"
gs <- gs4_find(sheet_name)
data <- gs4read_sheet(gs)
# Load the googlesheets4 package
library(googlesheets4)
# Authenticate with Google Sheets (run this only once)
gs4_auth()
# Specify the name of your Google Sheet
sheet_name <- "population distribution"
# Find the sheet by name
gs <- gs4_find(sheet_name)
# Read data from the Google Sheet
data <- read_sheet(gs)
sheet_name <- "Dataset"
# Find the sheet by name
gs <- gs4_find(sheet_name)
# Read data from the Google Sheet
data <- read_sheet(gs)
View(data)
# Load the googlesheets4 package
library(googlesheets4)
# Authenticate with Google Sheets (run this only once)
gs4_auth()
# Specify the name of your Google Sheet
sheet_name <- "Dataset"
sheet_number <- 2
gs <- gs4_find(sheet_name)
# Read data from the second sheet
data <- read_sheet(gs, range = sheet_number)
# Specify the name of your Google Sheet
sheet_name <- "Dataset"
gs <- gs4_find(sheet_name)
data <- read_sheet(gs)
# Specify the name of your Google Sheet
sheet_name <- "Dataset"
gs <- gs4_find(sheet_name)
data <- read_sheet(gs)
head(data)
# Specify the name of your Google Sheet
sheet_name <- "Dataset"
gs <- gs4_find(sheet_name)
data <- read_sheet(gs)
head(data)
data$Cohorts<-as.character(data$Cohorts)
data
if(data$Cohorts="0-5","0-5",if(data$Cohorts="1686700800","6-14",if(data$Cohorts="15-35","15-35",if(data$Cohorts="36-60","36-60","61+"))))
data$Cohorts<-if(data$Cohorts=="0-5","0-5",if(data$Cohorts=="1686700800","6-14",if(data$Cohorts=="15-35","15-35",if(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="1686700800","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts
# Specify the name of your Google Sheet
sheet_name <- "Dataset"
gs <- gs4_find(sheet_name)
data <- read_sheet(gs)
data$Cohorts<-as.character(data$Cohorts)
data$Cohorts<-as.factor(ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="1686700800","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+")))))
data
library(tidyverse)
data %>% group_by(Cohorts) %>% summarise(Women=sum(Female),
Men=sum(Male))
data %>% group_by(County,Cohorts) %>% summarise(Women=sum(Female),
Men=sum(Male))
# Specify the name of your Google Sheet
sheet_name <- "Dataset"
gs <- gs4_find(sheet_name)
data <- read_sheet(gs)
data$Cohorts<-as.character(data$Cohorts)
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="1686700800","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts <- factor(data$Cohorts, levels = c("0-5", "6-14", "15-35", "36-60", "61+"))
library(tidyverse)
data %>% group_by(County,Cohorts) %>% summarise(Women=sum(Female),
Men=sum(Male))
# Create the population pyramid plot
ggplot(data, aes(x = Female, xend = -Male, y = Cohorts)) +
geom_segment(aes(x = 0, xend = -Male, yend = Cohorts), color = "blue", size = 2) +
geom_segment(aes(x = 0, xend = Female, yend = Cohorts), color = "pink", size = 2) +
labs(x = "Population Count", y = "") +
=======
geom_bar(stat = "identity", show.legend = FALSE) +
>>>>>>> 490b9a6f9f89b705a1eb8efc333af9d3fabab3d8
theme_minimal() +
labs(x = "County", y = "Number of Level 3 Hospitals") +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 3 Hospitals by Rural Counties") +
coord_flip()+
geom_text(aes(label = Health_LV3), vjust = 0.5, hjust = 1, size = 4, color = colors[7])+
theme_hc()
fig3
# Filter the data to include only rural counties
kenya_rural <- kenya %>%
filter(Status == "Rural") %>%
arrange(Health_LV3)
# Create the bar chart
fig3<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV3), y = Health_LV3, fill = colors[1])) +
geom_bar(stat = "identity", show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Number of Level 3 Hospitals") +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 3 Hospitals by Rural Counties") +
coord_flip()+
geom_text(aes(label = Health_LV3), vjust = 0.5, hjust = -0.1, size = 4, color = colors[7])+
theme_hc()
fig3
# Filter the data to include only rural counties
kenya_rural <- kenya %>%
filter(Status == "Urban") %>%
arrange(Health_LV3)
# Create the bar chart
fig4<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV3), y = Health_LV3)) +
geom_bar(stat = "identity", show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 3 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 3 Hospitals by Urban Counties") +
coord_flip()+
geom_text(aes(label = Health_LV3), vjust = 0.5, hjust = -0.1, size = 4, color = colors[7])+
theme_hc()
fig4
# Filter the data to include only rural counties
kenya_rural <- kenya %>%
filter(Status == "Urban") %>%
arrange(Health_LV3)
# Create the bar chart
fig4<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV3), y = Health_LV3)) +
geom_bar(stat = "identity", show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 3 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 3 Hospitals by Urban Counties") +
coord_flip()+
geom_text(aes(label = Health_LV3), vjust = 0.5, hjust = 1, size = 4, color = colors[1])+
theme_hc()
fig4
# Filter the data to include only rural counties
kenya_rural <- kenya %>%
filter(Status == "Urban") %>%
arrange(Health_LV3)
# Create the bar chart
fig4<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV3), y = Health_LV3)) +
geom_bar(stat = "identity", show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 3 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 3 Hospitals by Urban Counties") +
coord_flip()+
geom_text(aes(label = Health_LV3), vjust = 0.5, hjust = 1, size = 5, color = colors[1])+
theme_hc()
fig4
# Filter the data to include only rural counties
kenya_rural <- kenya %>%
filter(Status == "Urban") %>%
arrange(Health_LV3)
# Create the bar chart
fig4<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV3), y = Health_LV3)) +
geom_bar(stat = "identity", show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 3 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 3 Hospitals by Urban Counties") +
coord_flip()+
geom_text(aes(label = Health_LV3), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig4
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(Health_LV2)
#create bar chart
fig5<-ggplot(kenya, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2, fill = "#15616D")) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Rural Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(Health_LV2)
#create bar chart
fig5<-ggplot(kenya, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2, fill = colors[7])) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Rural Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig5
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(Health_LV2)
#create bar chart
fig5<-ggplot(kenya, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2, fill = colors[1])) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Rural Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig5
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(Health_LV2)
#create bar chart
fig5<-ggplot(kenya, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2, fill = colors[1])) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Rural Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 6, color = colors[7])+
theme_hc()
fig5
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(Health_LV2)
#create bar chart
fig6<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[1]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Urban Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 6, color = colors[7])+
theme_hc()
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(Health_LV2)
#create bar chart
fig6<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[1]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Urban Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 6, color = colors[7])+
theme_hc()
fig6
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig7<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`,
fill="#15616D")) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Rural Counties")+
coord_flip()+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig7
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig7<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`,
fill=colors[7])) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Rural Counties")+
coord_flip()+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig7
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig7<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`,
fill=colors[1])) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Rural Counties")+
coord_flip()+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 6, color = colors[7])+
theme_hc()
fig7
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig7<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`,
fill=colors[7])) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
<<<<<<< HEAD
scale_x_continuous(labels = abs) +
theme(legend.position = "none")
# Create the population pyramid plot
ggplot(data, aes(x = -Female, xend = Male, y = reorder(Cohorts, -Female Male))) +
knitr::opts_chunk$set(echo = TRUE, warning = F,message = F,comment = NA)
>>>>>>> 853f74498eb8b7e5537daefca45670297b41da9d
rm(list=ls())
library(pacman)
p_load(readxl,tidyverse,dplyr,reshape2,ggplot2,plotly)
DataRural<-read_excel("Data/Rural-population-households-density-by-county.xlsx")
DataUrban<-read_excel("Data/Urban-population-households-density-by-county.xlsx")
DataRural['place']<-"Rural"
DataUrban['place']<-"Urban"
DataUrbanGender<-read_excel("Data/Population-in-urban-centers-by-sex-and-urban-center.xlsx")
DataFinal<-rbind(DataRural,DataUrban)
<<<<<<< HEAD
DataFinal
write.csv(DataFinal,"data.csv")
=======
library(googlesheets4)
gs4_auth()
# sheet_url <- "https://docs.google.com/spreadsheets/d/1aAwaL0fyrCGGU3QEjPA11_tnwMxmebkRY0pjNFKTF_I/edit#gid=1588788399"
# gs <- gs4_get(sheet_url)
# data <- gs4read_sheet(gs)
sheet_name <- "population distribution"
gs <- gs4_find(sheet_name)
data <- gs4read_sheet(gs)
# Create the population pyramid plot
ggplot(data, aes(x = -Female, xend = Male, y = Cohorts)) +
geom_segment(aes(x = 0, xend = -Female, yend = Cohorts), color = "Pink", size = 2) +
geom_segment(aes(x = 0, xend = Male, yend = Cohorts), color = "blue", size = 2) +
labs(x = "Population Count", y = "") +
=======
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Rural Counties")+
coord_flip()+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig7
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig7<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`,
fill="#15616D")) +
geom_bar(stat = "identity",show.legend = FALSE) +
>>>>>>> 490b9a6f9f89b705a1eb8efc333af9d3fabab3d8
theme_minimal() +
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Rural Counties")+
coord_flip()+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig7
# Filter the data to include only rural counties
kenya_rural <- kenya %>%
filter(Status == "Urban") %>%
arrange(Health_LV4)
# Create the bar chart
fig2<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV4), y = Health_LV4)) +
geom_bar(stat = "identity", show.legend = FALSE,fill=colors[1]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 4 Hospitals") +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 4 Hospitals by Urban Counties") +
coord_flip()+
geom_text(aes(label = Health_LV4), vjust = 0.5, hjust = 1, size = 8, color = colors[7])+
theme_hc()
# Filter the data to include only rural counties
kenya_rural <- kenya %>%
filter(Status == "Urban") %>%
arrange(Health_LV4)
# Create the bar chart
fig2<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV4), y = Health_LV4)) +
geom_bar(stat = "identity", show.legend = FALSE,fill=colors[1]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 4 Hospitals") +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 4 Hospitals by Urban Counties") +
coord_flip()+
geom_text(aes(label = Health_LV4), vjust = 0.5, hjust = 1, size = 8, color = colors[7])+
theme_hc()
fig2
fig3
fig4
fig5
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(Health_LV2)
#create bar chart
fig5<-ggplot(kenya, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2, fill = colors[1])) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Rural Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 3, color = colors[7])+
theme_hc()
fig5
kenya_rural
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(Health_LV2)
#create bar chart
fig6<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[1]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Urban Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 6, color = colors[7])+
theme_hc()
fig6
kenya_rural
kenya
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(Health_LV2)
#create bar chart
fig6<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[1]) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Urban Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 6, color = colors[7])+
theme_hc()
fig6
kenya_rural
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(Health_LV2)
#create bar chart
fig5<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -Health_LV2), y = Health_LV2, fill = colors[1])) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Number of Level 2 Hospitals") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Level 2 Hospitals by Rural Counties")+
coord_flip()+
geom_text(aes(label = Health_LV2), vjust = 0.5, hjust = 1, size = 3, color = colors[7])+
theme_hc()
fig5
fig6
fig7
fig7
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig7<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`,
fill="#15616D")) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Rural Counties")+
coord_flip()+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 3, color = colors[1])+
theme_hc()
fig7
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig7<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`,
fill="#15616D")) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Rural Counties")+
coord_flip()+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 4, color = colors[1])+
theme_hc()
fig7
fig8
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig8<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Urban Counties")+
coord_flip()+
scale_fill_manual(values = colors)+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 4, color = colors[1])+
theme_hc()
fig8
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(`Bed density per 10000 ppn`)
#create bar chart
fig8<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Bed density per 10000 ppn`), y = `Bed density per 10000 ppn`)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
<<<<<<< HEAD
scale_x_continuous(labels = abs) +
theme(legend.position = "none") +
geom_text(aes(x = 0, label = Cohorts), hjust = 0, nudge_x = -150) +
geom_text(aes(x = 0, label = Cohorts), hjust = 1, nudge_x = 150)
>>>>>>> 853f74498eb8b7e5537daefca45670297b41da9d
=======
labs(x = "County", y = "Bed density per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Bed density per 10000 ppn by Urban Counties")+
coord_flip()+
scale_fill_manual(values = colors)+
geom_text(aes(label = `Bed density per 10000 ppn`), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig8
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Health worker per 10000 ppn`)
#create bar chart
fig9<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Health worker per 10000 ppn`), y = `Health worker per 10000 ppn`,
fill="#15616D")) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Health worker per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Health worker per 10000 ppn by Urban Counties")+
coord_flip()+
scale_fill_manual(values = colors)+
geom_text(aes(label = `Health worker per 10000 ppn`), vjust = 0.5, hjust = 1, size = 4, color = colors[1])+
theme_hc()
fig9
kenya_rural<-kenya%>%
filter(Status=="Rural")%>%
arrange(`Health worker per 10000 ppn`)
#create bar chart
fig9<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Health worker per 10000 ppn`), y = `Health worker per 10000 ppn`,
fill="#15616D")) +
geom_bar(stat = "identity",show.legend = FALSE) +
theme_minimal() +
labs(x = "County", y = "Health worker per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Health worker per 10000 ppn by Urban Counties")+
coord_flip()+
scale_fill_manual(values = colors)+
geom_text(aes(label = `Health worker per 10000 ppn`), vjust = 0.5, hjust = 1, size = 4, color = colors[7])+
theme_hc()
fig9
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(`Health worker per 10000 ppn`)
#create bar chart
fig10<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Health worker per 10000 ppn`), y = `Health worker per 10000 ppn`)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
labs(x = "County", y = "Health worker per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Health worker per 10000 ppn by Urban Counties")+
coord_flip()+
scale_fill_manual(values = colors)+
geom_text(aes(label = `Health worker per 10000 ppn`), vjust = 0.5, hjust = 1, size = 4, color = colors[7])+
theme_hc()
fig10
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(`Health worker per 10000 ppn`)
#create bar chart
fig10<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Health worker per 10000 ppn`), y = `Health worker per 10000 ppn`)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
labs(x = "County", y = "Health worker per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Health worker per 10000 ppn by Urban Counties")+
coord_flip()+
scale_fill_manual(values = colors)+
geom_text(aes(label = `Health worker per 10000 ppn`), vjust = 0.5, hjust = 1, size = 4, color = colors[1])+
theme_hc()
fig10
kenya_rural<-kenya%>%
filter(Status=="Urban")%>%
arrange(`Health worker per 10000 ppn`)
#create bar chart
fig10<-ggplot(kenya_rural, aes(x = reorder(COUNTY, -`Health worker per 10000 ppn`), y = `Health worker per 10000 ppn`)) +
geom_bar(stat = "identity",show.legend = FALSE,fill=colors[7]) +
theme_minimal() +
labs(x = "County", y = "Health worker per 10000 ppn") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "County") +
ggtitle("Distribution of Health worker per 10000 ppn by Urban Counties")+
coord_flip()+
scale_fill_manual(values = colors)+
geom_text(aes(label = `Health worker per 10000 ppn`), vjust = 0.5, hjust = 1, size = 6, color = colors[1])+
theme_hc()
fig10
library(gridExtra)
grid.arrange(fig1,fig2,ncol=1)
library(gridExtra)
grid.arrange(fig1,fig2,ncol=2)
library(gridExtra)
grid.arrange(fig1,fig2,ncol=1)
grid.arrange(fig3,fig4,ncol=1)
grid.arrange(fig5,fig6,ncol=1)
grid.arrange(fig7,fig8,ncol=1)
grid.arrange(fig9,fig10,ncol=1)
>>>>>>> 490b9a6f9f89b705a1eb8efc333af9d3fabab3d8
