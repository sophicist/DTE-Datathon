df
colors <- c('#BC5308', '#FFECD1', '#C5CAB8', '#FF7D00', '#8AA79F', '#FFB569', '#15616D', '#001524')
df <- read_excel("Dataset/Dataset.xlsx", sheet = "data")
kenya <- df
kenya1 <- df
df %>% select(1:7) %>% head() %>% knitr::kable(caption = "A sample of the data")
library(tidyverse)
library(gridExtra)
library(readxl)
library(reshape2)
library(janitor)
library(ggthemes)
library(leaflet)
library(dplyr)
library(sf)
library(ggplot2)
library(knitr)
# library(kableExtra)
df <- data.frame(
Details = c("Time Frame","Deadline","Software/Tools"),
values  = c("1 Week","28th September","R - studio")
)
df %>% kable(caption = "The rules of the datathon")
knitr::opts_chunk$set(echo = TRUE,warning =F,message = F,comment = NA)
library(tidyverse)
library(gridExtra)
library(readxl)
library(reshape2)
library(janitor)
library(ggthemes)
library(leaflet)
library(dplyr)
library(sf)
library(ggplot2)
library(knitr)
# library(kableExtra)
df <- data.frame(
Details = c("Time Frame","Deadline","Software/Tools"),
values  = c("1 Week","28th September","R - studio")
)
df %>% kable(caption = "The rules of the datathon")
colors <- c('#BC5308', '#FFECD1', '#C5CAB8', '#FF7D00', '#8AA79F', '#FFB569', '#15616D', '#001524')
df <- read_excel("Dataset/Dataset.xlsx", sheet = "data")
kenya <- df
kenya1 <- df
df %>% select(1:7) %>% head() %>% knitr::kable(caption = "A sample of the data")
data<-read_excel("Dataset.xlsx",sheet="population distribution")
data$Cohorts<-as.factor(data$Cohorts)
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="45091","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts <- factor(data$Cohorts, levels = c("0-5", "6-14", "15-35", "36-60", "61+"))
library(ggplot2)
# Create a histogram of age cohort distribution
ggplot(data, aes(x = Cohorts, y = Total)) +
geom_bar(stat = "identity", fill = '#15616D') +
# geom_text(aes(label = Total)) +
labs(x = "Age group ", y = "Population", title = "Age  Distribution for the Entire Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
cohort_summary <- data %>%
group_by(County,Cohorts) %>%
summarise(Total_Population = round((sum(Total)/100000),3))
# Create the bar graph
ggplot(cohort_summary, aes(x = reorder(County, -Total_Population), y = Total_Population, fill = Cohorts)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "County", y = "Total Population '00000'", title = "Population by Cohorts Across Counties '00000'") +
scale_fill_discrete() +
theme_minimal() +
scale_fill_manual(values = colors) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data_long <- data %>%
pivot_longer(cols = -c("County", "Cohorts", "Total"), names_to = "gender", values_to = "population")
# Calculate Total population per County
total_population <- data_long %>%
group_by(County) %>%
summarise(Total_Population = sum(population))
# Reorder the levels of County based on Total population (descending order)
data_long$County <- factor(data_long$County, levels = total_population$County[order(-total_population$Total_Population)])
data_long %>%
group_by(County, gender) %>%
summarise(Totals = round((sum(population) / 100000), 2)) %>%
ggplot(aes(x = County, y = Totals, fill = gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Totals), position = position_stack(vjust = 0.5), size = 3) +
labs(y = "Population '00000'", x = "County", title = "Gender Distribution by County in '00000'") +
scale_fill_manual(values = c("Female" = '#FFECD1', "Male" = '#15616D')) +
theme_minimal() +
coord_flip() +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5))
# Assuming you have already loaded and transformed your data into 'data_long' as described in your code
data_long %>%
group_by( Cohorts, gender) %>%
summarise(Totals = round((sum(population) / 100000), 2)) %>%
ggplot(aes(x = Cohorts, y = Totals, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = Totals), position = position_dodge(width = 0.9), size = 3, vjust = -0.5) +
labs(y = "Population", x = "Age groups", title = "Gender Distribution by  Age Group in '00000'") +
scale_fill_manual(values = c("Female" = '#FFECD1', "Male" = '#15616D')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5))
df
df %>% summarise(`Rural mean population`=mean(Rural_ppn),
`Rural SD`=sd(Rural_ppn),
`Urban mean population`=mean(Urban_ppn),
`Urban SD`=sd(Urban_ppn))
df %>% summarise(`Rural mean population`=mean(Rural_ppn),
`Rural SD`=sd(Rural_ppn),
`Rural IQR`=IQR(Rural_ppn),
`Urban mean population`=mean(Urban_ppn),
`Urban SD`=sd(Urban_ppn),
`Urban IQR`=IQR(Urban_ppn))
df %>% summarise(`Rural mean population`=mean(Rural_ppn),
`Rural SD`=sd(Rural_ppn),
`Rural IQR`=IQR(Rural_ppn),
`Urban mean population`=mean(Urban_ppn),
`Urban SD`=sd(Urban_ppn),
`Urban IQR`=IQR(Urban_ppn)).t()
stats=df %>% summarise(`Rural mean population`=mean(Rural_ppn),
`Rural SD`=sd(Rural_ppn),
`Rural IQR`=IQR(Rural_ppn),
`Urban mean population`=mean(Urban_ppn),
`Urban SD`=sd(Urban_ppn),
`Urban IQR`=IQR(Urban_ppn))
stats.t()
stats
stats=df %>% summarise(`Rural mean population`=mean(Rural_ppn),
`Rural SD`=sd(Rural_ppn),
`Rural IQR`=IQR(Rural_ppn),
`Urban mean population`=mean(Urban_ppn),
`Urban SD`=sd(Urban_ppn),
`Urban IQR`=IQR(Urban_ppn))
stats %>% kable()
stats=df %>% summarise(`Rural mean population`=mean(Rural_ppn),
`Rural SD`=sd(Rural_ppn),
`Rural IQR`=IQR(Rural_ppn),
`Urban mean population`=mean(Urban_ppn),
`Urban SD`=sd(Urban_ppn),
`Urban IQR`=IQR(Urban_ppn))
stats %>% kable()
df %>% select(c(Countu,Rural_ppn,Urban_ppn))
df
df %>% select(Countu,Rural_ppn,Urban_ppn)
df %>% select(c("County","Rural_ppn","Urban_ppn"))
df %>%
select(c("County","Rural_ppn","Urban_ppn")) %>%
pivot_longer(id!="County", values_to = Populations,names_to = "Residence")
df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations") %>%
ifelse(Residence=="Rural_ppn","Rural","Urban")
df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations") %>%
ifelse(Residence="Rural_ppn","Rural","Urban")
DataRural=df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations") %>%
knitr::opts_chunk$set(echo = TRUE,warning =F,message = F,comment = NA)
library(tidyverse)
library(gridExtra)
library(readxl)
library(reshape2)
library(janitor)
library(ggthemes)
library(leaflet)
library(dplyr)
library(sf)
library(ggplot2)
library(knitr)
# library(kableExtra)
df <- data.frame(
Details = c("Time Frame","Deadline","Software/Tools"),
values  = c("1 Week","28th September","R - studio")
)
df %>% kable(caption = "The rules of the datathon")
colors <- c('#BC5308', '#FFECD1', '#C5CAB8', '#FF7D00', '#8AA79F', '#FFB569', '#15616D', '#001524')
df <- read_excel("Dataset/Dataset.xlsx", sheet = "data")
kenya <- df
kenya1 <- df
df %>% select(1:7) %>% head() %>% knitr::kable(caption = "A sample of the data")
data<-read_excel("Dataset.xlsx",sheet="population distribution")
data$Cohorts<-as.factor(data$Cohorts)
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="45091","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts <- factor(data$Cohorts, levels = c("0-5", "6-14", "15-35", "36-60", "61+"))
library(ggplot2)
# Create a histogram of age cohort distribution
ggplot(data, aes(x = Cohorts, y = Total)) +
geom_bar(stat = "identity", fill = '#15616D') +
# geom_text(aes(label = Total)) +
labs(x = "Age group ", y = "Population", title = "Age  Distribution for the Entire Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
cohort_summary <- data %>%
group_by(County,Cohorts) %>%
summarise(Total_Population = round((sum(Total)/100000),3))
# Create the bar graph
ggplot(cohort_summary, aes(x = reorder(County, -Total_Population), y = Total_Population, fill = Cohorts)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "County", y = "Total Population '00000'", title = "Population by Cohorts Across Counties '00000'") +
scale_fill_discrete() +
theme_minimal() +
scale_fill_manual(values = colors) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data_long <- data %>%
pivot_longer(cols = -c("County", "Cohorts", "Total"), names_to = "gender", values_to = "population")
# Calculate Total population per County
total_population <- data_long %>%
group_by(County) %>%
summarise(Total_Population = sum(population))
# Reorder the levels of County based on Total population (descending order)
data_long$County <- factor(data_long$County, levels = total_population$County[order(-total_population$Total_Population)])
data_long %>%
group_by(County, gender) %>%
summarise(Totals = round((sum(population) / 100000), 2)) %>%
ggplot(aes(x = County, y = Totals, fill = gender)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Totals), position = position_stack(vjust = 0.5), size = 3) +
labs(y = "Population '00000'", x = "County", title = "Gender Distribution by County in '00000'") +
scale_fill_manual(values = c("Female" = '#FFECD1', "Male" = '#15616D')) +
theme_minimal() +
coord_flip() +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5))
# Assuming you have already loaded and transformed your data into 'data_long' as described in your code
data_long %>%
group_by( Cohorts, gender) %>%
summarise(Totals = round((sum(population) / 100000), 2)) %>%
ggplot(aes(x = Cohorts, y = Totals, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = Totals), position = position_dodge(width = 0.9), size = 3, vjust = -0.5) +
labs(y = "Population", x = "Age groups", title = "Gender Distribution by  Age Group in '00000'") +
scale_fill_manual(values = c("Female" = '#FFECD1', "Male" = '#15616D')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5))
stats=df %>% summarise(`Rural mean population`=mean(Rural_ppn),
`Rural SD`=sd(Rural_ppn),
`Rural IQR`=IQR(Rural_ppn),
`Urban mean population`=mean(Urban_ppn),
`Urban SD`=sd(Urban_ppn),
`Urban IQR`=IQR(Urban_ppn))
stats %>% kable()
DataRural=df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations") %>%
DataRural=df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
DataRural=df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
DataRural$Residence=DataRural$Residence %>%  ifelse(DataRural$Residence="Rural_ppn","Rural","Urban")
DataRural=df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
DataRural$Residence= ifelse(DataRural$Residence="Rural_ppn","Rural","Urban")
DataRural=df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
DataRural$Residence= ifelse(DataRural$Residence=="Rural_ppn","Rural","Urban")
DataRural$Residence
DataRural
DataRural=df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
DataRural$Residence= ifelse(DataRural$Residence=="Rural_ppn","Rural","Urban")
# Calculate Total population per County
total_population <- DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(populations))
total_population <- DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(populations))
DataRural
DataRural %>%
group_by(County)
DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(populations))
DataRural$Populations<-as.numeric(DataRural$Populations)
total_population <- DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(populations))
DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(populations))
DataRural %>%
group_by(County, Residence) %>%
summarise(Totals = round((sum(Populations) / 100000), 2)) %>%
ggplot(aes(x = County, y = Totals, fill = Residence)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Totals), position = position_stack(vjust = 0.5), size = 3) +
labs(y = "Population '00000'", x = "County", title = "Population of residence Distribution by County in '00000'") +
scale_fill_manual(values = c("Rural" = '#FFECD1', "Urban" = '#15616D')) +
theme_minimal() +
coord_flip() +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5))
DataRural=df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
DataRural$Residence= ifelse(DataRural$Residence=="Rural_ppn","Rural","Urban")
DataRural$Populations<-as.numeric(DataRural$Populations)
# Calculate Total population per County
total_population <- DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(populations))
DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(populations))
DataRural <- df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
DataRural$Residence <- ifelse(DataRural$Residence == "Rural_ppn", "Rural", "Urban")
DataRural$Populations <- as.numeric(DataRural$Populations)
# Calculate Total population per County
total_population <- DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(Populations))
# Reorder the levels of County based on Total population (descending order)
DataRural$County <- factor(DataRural$County, levels = total_population$County[order(-total_population$Total_Population)])
DataRural %>%
group_by(County, Residence) %>%
summarise(Totals = round((sum(Populations) / 100000), 2)) %>%
ggplot(aes(x = County, y = Totals, fill = Residence)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Totals), position = position_stack(vjust = 0.5), size = 3) +
labs(y = "Population '00000'", x = "County", title = "Population of Residence Distribution by County in '00000'") +
scale_fill_manual(values = c("Rural" = '#FFECD1', "Urban" = '#15616D')) +
theme_minimal() +
coord_flip() +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5))
DataRural <- df %>%
select(County, Rural_ppn, Urban_ppn) %>%
pivot_longer(cols = c(Rural_ppn, Urban_ppn), names_to = "Residence", values_to = "Populations")
DataRural$Residence <- ifelse(DataRural$Residence == "Rural_ppn", "Rural", "Urban")
DataRural$Populations <- as.numeric(DataRural$Populations)
# Calculate Total population per County
total_population <- DataRural %>%
group_by(County) %>%
summarise(Total_Population = sum(Populations))
# Reorder the levels of County based on Total population (descending order)
DataRural$County <- factor(DataRural$County, levels = total_population$County[order(total_population$Total_Population)])
DataRural %>%
group_by(County, Residence) %>%
summarise(Totals = round((sum(Populations) / 100000), 2)) %>%
ggplot(aes(x = County, y = Totals, fill = Residence)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Totals), position = position_stack(vjust = 0.5), size = 3) +
labs(y = "Population '00000'", x = "County", title = "Population of Residence Distribution by County in '00000'") +
scale_fill_manual(values = c("Rural" = '#FFECD1', "Urban" = '#15616D')) +
theme_minimal() +
coord_flip() +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5))
# Load the shapefile
kenya_counties <- st_read("LYNN ANALYSIS/County.shp")
# Merge data by county
merged_data <- merge(kenya_counties, kenya, by.x = "COUNTY", by.y = "COUNTY")
kenya_counties
# Create a leaflet map
#install.packages("leaflet")
#remotes::install_github("rstudio/webshot2")
library(leaflet)
library(webshot2)
kenya_map <- leaflet(merged_data) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", merged_data$`Total Population`)(merged_data$`Total Population`),
fillOpacity = 0.7,
color = "white",
weight = 1,
label = ~paste(merged_data$COUNTY, "<br>", "Total Population:", merged_data$`Total Population`, "people"),
highlight = highlightOptions(
weight = 3,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE
),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px"
)
) %>%
addLegend(
"bottomright",
pal = colorQuantile("YlOrRd", merged_data$`Total Population`),
values = ~merged_data$`Total Population`,
title = "Total population",
opacity = 0.7
)
# Display the map
htmlwidgets::saveWidget(kenya_map, "kenya_map.html")
# Take a screenshot and save it as an image
webshot2::webshot("kenya_map.html", "kenya_map.png")
data<-read_excel("Dataset.xlsx",sheet="population distribution")
data$Cohorts<-as.factor(data$Cohorts)
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="45091","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts <- factor(data$Cohorts, levels = c("0-5", "6-14", "15-35", "36-60", "61+"))
library(ggplot2)
# Create a histogram of age cohort distribution
ggplot(data, aes(x = Cohorts, y = Total)) +
geom_bar(stat = "identity", fill = '#15616D') +
geom_text(aes(label = Total), vjust = -0.5, size = 3) +  # Add text labels above the bars
labs(x = "Age group", y = "Population", title = "Age Distribution for the Entire Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data<-read_excel("Dataset.xlsx",sheet="population distribution")
data$Cohorts<-as.factor(data$Cohorts)
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="45091","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts <- factor(data$Cohorts, levels = c("0-5", "6-14", "15-35", "36-60", "61+"))
library(ggplot2)
# Create a histogram of age cohort distribution
data %>%
group_by(Cohorts) %>% summarise(Totals=sum(Total))
ggplot( aes(x = Cohorts, y = Totals)) +
geom_bar(stat = "identity", fill = '#15616D') +
geom_text(aes(label = "Totals"), vjust = -0.5, size = 3) +  # Add text labels above the bars
labs(x = "Age group", y = "Population", title = "Age Distribution for the Entire Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data<-read_excel("Dataset.xlsx",sheet="population distribution")
data$Cohorts<-as.factor(data$Cohorts)
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="45091","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts <- factor(data$Cohorts, levels = c("0-5", "6-14", "15-35", "36-60", "61+"))
library(ggplot2)
# Create a histogram of age cohort distribution
data %>%
group_by(Cohorts) %>% summarise(Totals=sum(Total))
ggplot( aes(x = Cohorts, y = Totals)) +
geom_bar(stat = "identity", fill = '#15616D') +
geom_text(aes(label = Totals), vjust = -0.5, size = 3) +  # Add text labels above the bars
labs(x = "Age group", y = "Population", title = "Age Distribution for the Entire Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data<-read_excel("Dataset.xlsx",sheet="population distribution")
data$Cohorts<-as.factor(data$Cohorts)
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="45091","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts <- factor(data$Cohorts, levels = c("0-5", "6-14", "15-35", "36-60", "61+"))
library(ggplot2)
# Create a histogram of age cohort distribution
data %>%
group_by(Cohorts) %>%
summarise(Totals=sum(Total)) %>%
ggplot( aes(x = Cohorts, y = Totals)) +
geom_bar(stat = "identity", fill = '#15616D') +
geom_text(aes(label = Totals), vjust = -0.5, size = 3) +  # Add text labels above the bars
labs(x = "Age group", y = "Population", title = "Age Distribution for the Entire Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data<-read_excel("Dataset.xlsx",sheet="population distribution")
data$Cohorts<-as.factor(data$Cohorts)
data$Cohorts<-ifelse(data$Cohorts=="0-5","0-5",
ifelse(data$Cohorts=="45091","6-14",
ifelse(data$Cohorts=="15-35","15-35",
ifelse(data$Cohorts=="36-60","36-60","61+"))))
data$Cohorts <- factor(data$Cohorts, levels = c("0-5", "6-14", "15-35", "36-60", "61+"))
library(ggplot2)
# Create a histogram of age cohort distribution
data %>%
group_by(Cohorts) %>%
summarise(Totals=sum(Total)) %>%
ggplot( aes(x = Cohorts, y = Totals)) +
geom_bar(stat = "identity", fill = '#15616D') +
geom_text(aes(label = Totals), vjust = -0.5, size = 3) +  # Add text labels above the bars
labs(x = "Age group", y = "Total population", title = "Age Distribution for the Entire Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
cohort_summary <- data %>%
group_by(County,Cohorts) %>%
summarise(Total_Population = round((sum(Total)/100000),3))
# Create the bar graph
ggplot(cohort_summary, aes(x = reorder(County, -Total_Population), y = Total_Population, fill = Cohorts)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "County", y = "Total Population '00000'", title = "Population by Cohorts Across Counties '00000'") +
scale_fill_discrete() +
theme_minimal() +
scale_fill_manual(values = colors) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Assuming you have already loaded and transformed your data into 'data_long' as described in your code
data_long %>%
group_by( Cohorts, gender) %>%
summarise(Totals = round((sum(population) / 100000), 2)) %>%
ggplot(aes(x = Cohorts, y = Totals, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = Totals), position = position_dodge(width = 0.9), size = 3, vjust = -0.5) +
labs(y = "Population", x = "Age groups", title = "Gender Distribution by  Age Group in '00000'") +
scale_fill_manual(values = c("Female" = '#FFECD1', "Male" = '#15616D')) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5))
knitr::opts_chunk$set(echo = TRUE,warning =F,message = F,comment = NA)
colors <- c('#BC5308', '#FFECD1', '#C5CAB8', '#FF7D00', '#8AA79F', '#FFB569', '#15616D', '#001524')
df <- read_excel("Dataset/Dataset.xlsx", sheet = "data")
kenya <- df
kenya1 <- df
df %>% select(1:7) %>% head() %>% knitr::kable(caption = "A sample of the data")
